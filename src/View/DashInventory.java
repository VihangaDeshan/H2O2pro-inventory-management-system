/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.*;
import Model.MProductAdd;
import Model.MyDBConnection;
import com.mysql.cj.protocol.Resultset;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author acer
 */
public class DashInventory extends javax.swing.JFrame {

    /**
     * Creates new form DashInventory
     */
    public DashInventory() {
        initComponents();
        notdisplay(false);
        groupradiobuton();
        rbtn_lowStock.doClick();
    }
public final void notdisplay(boolean y)
{
    l4cid.setVisible(y);  txt_cusid4.setVisible(y); l4emp.setVisible(y);  txtRequestType4.setVisible(y);l4rdate.setVisible(y);CmbEmpId.setVisible(y);  l4rid.setVisible(y);cmbRequestStatus4.setVisible(y);
    l4rs.setVisible(y);txtRequestdate4.setVisible(y);
    l4rt.setVisible(y);cmbRequestID4.setVisible(y);btnApplyRequest4.setVisible(y);
}
public final  void groupradiobuton()
{
      rbtng_request.add(rbtn_approved_request);rbtng_request.add(rbtn_all_request);rbtng_request.add(rbtn_pending_request);
    rbtng_inventory.add(rbtn_AllStock);rbtng_inventory.add(rbtn_Categorize);rbtng_inventory.add(rbtn_allEmptyStock);rbtng_inventory.add(rbtn_searchProduct);rbtng_inventory.add(rbtn_lowStock);
    rbtng_product_manager.add(managePrice); rbtng_product_manager.add(manageQyt); rbtng_product_manager.add(displayAll);
}
public final void notdisplayInventory(boolean x)
{
     lbl_I_Pname.setVisible(x);lbl_I_availableQyt.setVisible(x);lbl_I_category.setVisible(x);lbl_I_inventoryId.setVisible(x);
     cmbCategory2.setVisible(x);cmbProductName2.setVisible(x);txtAvailableQt2.setVisible(x);txtInventoryID2.setVisible(x);
}
public final void notdisplayManager(boolean z)
{
    lbl_M_adCharge.setVisible(z);lbl_M_newPrice.setVisible(z);lbl_M_supplierprice.setVisible(z);lbl_M_tax.setVisible(z);btnSet3.setVisible(z);lbl_M_DCharge.setVisible(z);
    txtAdditionalCharge3.setVisible(z);txtNewPrice3.setVisible(z);txtDeliveryCharge3.setVisible(z);txtTax3.setVisible(z);txtSupplierPrice3.setVisible(z);
}
public final void notdisplayManager2(boolean  m)
{
    lbl_M_Iid.setVisible(m);lbl_M_Pid.setVisible(m);lbl_M_Pname.setVisible(m);lbl_M_catName.setVisible(m);lbl_M_qyt.setVisible(m);lbl_M_price.setVisible(m);
    cmbProductID3.setVisible(m);txtAvailableQt3.setVisible(m);txtCategory3.setVisible(m);txtEachPrice3.setVisible(m);txtInventoryID3.setVisible(m);txtManagePname.setVisible(m);btnUpdate.setVisible(m);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtng_request = new javax.swing.ButtonGroup();
        rbtng_inventory = new javax.swing.ButtonGroup();
        rbtng_product_manager = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        InventoryPanel = new javax.swing.JPanel();
        rbtn_searchProduct = new javax.swing.JRadioButton();
        rbtn_lowStock = new javax.swing.JRadioButton();
        rbtn_AllStock = new javax.swing.JRadioButton();
        rbtn_allEmptyStock = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbl_I_Pname = new javax.swing.JLabel();
        lbl_I_category = new javax.swing.JLabel();
        lbl_I_inventoryId = new javax.swing.JLabel();
        lbl_I_availableQyt = new javax.swing.JLabel();
        cmbProductName2 = new javax.swing.JComboBox<>();
        cmbCategory2 = new javax.swing.JComboBox<>();
        txtInventoryID2 = new javax.swing.JTextField();
        txtAvailableQt2 = new javax.swing.JTextField();
        rbtn_Categorize = new javax.swing.JRadioButton();
        ManageProductPanel = new javax.swing.JPanel();
        manageQyt = new javax.swing.JRadioButton();
        managePrice = new javax.swing.JRadioButton();
        displayAll = new javax.swing.JRadioButton();
        btnAddProduct3 = new javax.swing.JButton();
        lbl_M_Pid = new javax.swing.JLabel();
        lbl_M_Pname = new javax.swing.JLabel();
        lbl_M_catName = new javax.swing.JLabel();
        lbl_M_Iid = new javax.swing.JLabel();
        lbl_M_price = new javax.swing.JLabel();
        lbl_M_qyt = new javax.swing.JLabel();
        cmbProductID3 = new javax.swing.JComboBox<>();
        txtCategory3 = new javax.swing.JTextField();
        txtInventoryID3 = new javax.swing.JTextField();
        txtEachPrice3 = new javax.swing.JTextField();
        txtAvailableQt3 = new javax.swing.JTextField();
        lbl_M_supplierprice = new javax.swing.JLabel();
        lbl_M_tax = new javax.swing.JLabel();
        lbl_M_adCharge = new javax.swing.JLabel();
        lbl_M_DCharge = new javax.swing.JLabel();
        lbl_M_newPrice = new javax.swing.JLabel();
        txtSupplierPrice3 = new javax.swing.JTextField();
        txtTax3 = new javax.swing.JTextField();
        txtAdditionalCharge3 = new javax.swing.JTextField();
        txtDeliveryCharge3 = new javax.swing.JTextField();
        txtNewPrice3 = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnSet3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        txtManagePname = new javax.swing.JTextField();
        SupplierPanel = new javax.swing.JPanel();
        jRadioButton11 = new javax.swing.JRadioButton();
        jRadioButton12 = new javax.swing.JRadioButton();
        jRadioButton13 = new javax.swing.JRadioButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        cmbSupplierID1 = new javax.swing.JComboBox<>();
        txtSupplierName1 = new javax.swing.JTextField();
        txtContractInfo1 = new javax.swing.JTextField();
        btnUpdate1 = new javax.swing.JButton();
        btnSearch1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        serviceRequestPanel = new javax.swing.JPanel();
        rbtn_all_request = new javax.swing.JRadioButton();
        rbtn_pending_request = new javax.swing.JRadioButton();
        rbtn_approved_request = new javax.swing.JRadioButton();
        l4rid = new javax.swing.JLabel();
        l4cid = new javax.swing.JLabel();
        l4rdate = new javax.swing.JLabel();
        l4rt = new javax.swing.JLabel();
        l4rs = new javax.swing.JLabel();
        l4emp = new javax.swing.JLabel();
        cmbRequestID4 = new javax.swing.JComboBox<>();
        txtRequestdate4 = new javax.swing.JTextField();
        txtRequestType4 = new javax.swing.JTextField();
        cmbRequestStatus4 = new javax.swing.JComboBox<>();
        btnApplyRequest4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        txt_cusid4 = new javax.swing.JTextField();
        CmbEmpId = new javax.swing.JComboBox<>();
        addProductPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtProductName6 = new javax.swing.JTextField();
        cmbCategoryID6 = new javax.swing.JComboBox<>();
        cmbSupplierID6 = new javax.swing.JComboBox<>();
        txtSupplierPrice6 = new javax.swing.JTextField();
        txtTax6 = new javax.swing.JTextField();
        txtAdditionalCharge6 = new javax.swing.JTextField();
        txtDeliveryCharge6 = new javax.swing.JTextField();
        txtNewPrice6 = new javax.swing.JTextField();
        txtDescription6 = new javax.swing.JTextField();
        txtProductType6 = new javax.swing.JTextField();
        btnADD6 = new javax.swing.JButton();
        txt_addProductKey = new javax.swing.JTextField();
        txt_inventoryAddKey = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSpecification6 = new javax.swing.JTextField();
        Report = new javax.swing.JPanel();
        gbtn_1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        gbtn_2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        gbtn_3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        TabInventory = new javax.swing.JButton();
        TabProductManager = new javax.swing.JButton();
        TabServiceRequest = new javax.swing.JButton();
        TabSupplyManager = new javax.swing.JButton();
        TabOrders = new javax.swing.JButton();
        TabRequest = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rbtn_searchProduct.setText("Search by Product");
        rbtn_searchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_searchProductActionPerformed(evt);
            }
        });

        rbtn_lowStock.setText("All Low Stocks");
        rbtn_lowStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_lowStockActionPerformed(evt);
            }
        });

        rbtn_AllStock.setText("All");
        rbtn_AllStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_AllStockActionPerformed(evt);
            }
        });

        rbtn_allEmptyStock.setText("All Empty Stocks");
        rbtn_allEmptyStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_allEmptyStockActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "InventoryID", "ProductName", "Category", "AvailableQt"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        lbl_I_Pname.setText("Product Name");

        lbl_I_category.setText("Category");

        lbl_I_inventoryId.setText("Inventory ID");

        lbl_I_availableQyt.setText("Available Qt");

        cmbProductName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductName2ActionPerformed(evt);
            }
        });

        cmbCategory2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategory2ActionPerformed(evt);
            }
        });

        rbtn_Categorize.setText("Categorize");
        rbtn_Categorize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_CategorizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InventoryPanelLayout = new javax.swing.GroupLayout(InventoryPanel);
        InventoryPanel.setLayout(InventoryPanelLayout);
        InventoryPanelLayout.setHorizontalGroup(
            InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryPanelLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InventoryPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(InventoryPanelLayout.createSequentialGroup()
                        .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InventoryPanelLayout.createSequentialGroup()
                                .addComponent(rbtn_searchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtn_lowStock, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtn_AllStock, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InventoryPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_I_availableQyt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_I_inventoryId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_I_Pname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                                    .addComponent(lbl_I_category, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InventoryPanelLayout.createSequentialGroup()
                                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtAvailableQt2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbCategory2, 0, 200, Short.MAX_VALUE)
                                    .addComponent(cmbProductName2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtInventoryID2))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(InventoryPanelLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(rbtn_Categorize)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rbtn_allEmptyStock, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61))))))
        );
        InventoryPanelLayout.setVerticalGroup(
            InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtn_searchProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbtn_lowStock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbtn_AllStock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbtn_Categorize))
                    .addComponent(rbtn_allEmptyStock))
                .addGap(24, 24, 24)
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_I_Pname)
                    .addComponent(cmbProductName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_I_category)
                    .addComponent(cmbCategory2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_I_inventoryId)
                    .addComponent(txtInventoryID2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_I_availableQyt)
                    .addComponent(txtAvailableQt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("tab1", InventoryPanel);

        manageQyt.setText("Each Qt Update");
        manageQyt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageQytActionPerformed(evt);
            }
        });

        managePrice.setText("Each Price Update");
        managePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managePriceActionPerformed(evt);
            }
        });

        displayAll.setText("Display All");
        displayAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAllActionPerformed(evt);
            }
        });

        btnAddProduct3.setBackground(new java.awt.Color(153, 153, 153));
        btnAddProduct3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddProduct3.setText("Add Product");
        btnAddProduct3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProduct3ActionPerformed(evt);
            }
        });

        lbl_M_Pid.setText("Product ID");

        lbl_M_Pname.setText("Product Name");

        lbl_M_catName.setText("Category");

        lbl_M_Iid.setText("Inventory ID");

        lbl_M_price.setText("Each Price");

        lbl_M_qyt.setText("Available Qt");

        cmbProductID3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "P0112", "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbProductID3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductID3ActionPerformed(evt);
            }
        });

        lbl_M_supplierprice.setText("Supplier Price");

        lbl_M_tax.setText("Tax  (%)");

        lbl_M_adCharge.setText("Additional Charge");

        lbl_M_DCharge.setText("Delivey Charge");

        lbl_M_newPrice.setText("New Price");

        txtSupplierPrice3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSupplierPrice3KeyTyped(evt);
            }
        });

        txtTax3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTax3KeyTyped(evt);
            }
        });

        txtAdditionalCharge3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAdditionalCharge3KeyTyped(evt);
            }
        });

        txtDeliveryCharge3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDeliveryCharge3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDeliveryCharge3KeyTyped(evt);
            }
        });

        txtNewPrice3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewPrice3ActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(153, 153, 153));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setText("update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSet3.setBackground(new java.awt.Color(153, 153, 153));
        btnSet3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSet3.setText("Set");
        btnSet3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSet3ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductID", "ProductName", "Category", "Inventory", "AvailableQyt", "price"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout ManageProductPanelLayout = new javax.swing.GroupLayout(ManageProductPanel);
        ManageProductPanel.setLayout(ManageProductPanelLayout);
        ManageProductPanelLayout.setHorizontalGroup(
            ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageProductPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageProductPanelLayout.createSequentialGroup()
                        .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ManageProductPanelLayout.createSequentialGroup()
                                .addComponent(manageQyt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(managePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(displayAll, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ManageProductPanelLayout.createSequentialGroup()
                                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lbl_M_qyt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_M_price, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_M_Iid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_M_catName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_M_Pname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(lbl_M_Pid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCategory3)
                                    .addComponent(txtInventoryID3)
                                    .addComponent(txtEachPrice3)
                                    .addComponent(txtAvailableQt3)
                                    .addComponent(cmbProductID3, 0, 150, Short.MAX_VALUE)
                                    .addComponent(txtManagePname))
                                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ManageProductPanelLayout.createSequentialGroup()
                                        .addGap(102, 102, 102)
                                        .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lbl_M_supplierprice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbl_M_tax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbl_M_adCharge, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(lbl_M_DCharge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbl_M_newPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(ManageProductPanelLayout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ManageProductPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                                .addComponent(btnAddProduct3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51))
                            .addGroup(ManageProductPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtSupplierPrice3)
                                        .addComponent(txtTax3)
                                        .addComponent(txtAdditionalCharge3)
                                        .addComponent(txtDeliveryCharge3)
                                        .addComponent(txtNewPrice3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                    .addComponent(btnSet3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        ManageProductPanelLayout.setVerticalGroup(
            ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageProductPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manageQyt)
                    .addComponent(managePrice)
                    .addComponent(displayAll)
                    .addComponent(btnAddProduct3))
                .addGap(18, 18, 18)
                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_M_Pid)
                    .addComponent(cmbProductID3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_M_supplierprice)
                    .addComponent(txtSupplierPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_M_Pname)
                    .addComponent(lbl_M_tax)
                    .addComponent(txtTax3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtManagePname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_M_catName)
                    .addComponent(txtCategory3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_M_adCharge)
                    .addComponent(txtAdditionalCharge3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_M_Iid)
                    .addComponent(txtInventoryID3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_M_DCharge)
                    .addComponent(txtDeliveryCharge3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_M_price)
                    .addComponent(txtEachPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_M_newPrice)
                    .addComponent(txtNewPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ManageProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_M_qyt)
                    .addComponent(txtAvailableQt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate)
                    .addComponent(btnSet3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab2", ManageProductPanel);

        jRadioButton11.setText("View Each Supplier");

        jRadioButton12.setText("Update Contract");

        jRadioButton13.setText("View All Suppliers");

        jLabel22.setText("Supplier ID");

        jLabel23.setText("Supplier Name");

        jLabel24.setText("Contract Info");

        cmbSupplierID1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S0010", "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtSupplierName1.setText("ECA product");

        txtContractInfo1.setText("1000 quantities per months ");

        btnUpdate1.setBackground(new java.awt.Color(153, 153, 153));
        btnUpdate1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate1.setText("Update");

        btnSearch1.setBackground(new java.awt.Color(153, 153, 153));
        btnSearch1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSearch1.setText("Search");
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Supplier ID", "Supplier Name", "Contract", "EMP ID"
            }
        ));
        jScrollPane5.setViewportView(jTable4);

        javax.swing.GroupLayout SupplierPanelLayout = new javax.swing.GroupLayout(SupplierPanel);
        SupplierPanel.setLayout(SupplierPanelLayout);
        SupplierPanelLayout.setHorizontalGroup(
            SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SupplierPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SupplierPanelLayout.createSequentialGroup()
                        .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SupplierPanelLayout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(jRadioButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))
                            .addGroup(SupplierPanelLayout.createSequentialGroup()
                                .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtContractInfo1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSupplierName1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbSupplierID1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(310, 310, 310)
                                .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE))
                .addContainerGap())
        );
        SupplierPanelLayout.setVerticalGroup(
            SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SupplierPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton11)
                    .addComponent(jRadioButton12)
                    .addComponent(jRadioButton13))
                .addGap(99, 99, 99)
                .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(cmbSupplierID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtSupplierName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SupplierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtContractInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        jTabbedPane1.addTab("tab4", SupplierPanel);

        rbtn_all_request.setText("View All Request");
        rbtn_all_request.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_all_requestActionPerformed(evt);
            }
        });

        rbtn_pending_request.setText("View Pending requests");
        rbtn_pending_request.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_pending_requestActionPerformed(evt);
            }
        });

        rbtn_approved_request.setText("View approved requests");
        rbtn_approved_request.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_approved_requestActionPerformed(evt);
            }
        });

        l4rid.setText("Request ID");

        l4cid.setText("Customer ID");

        l4rdate.setText("Requset Date");

        l4rt.setText("Request Type");

        l4rs.setText("Request Status");

        l4emp.setText("Employee ID");

        cmbRequestID4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRequestID4ActionPerformed(evt);
            }
        });

        cmbRequestStatus4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Open", "Closed" }));

        btnApplyRequest4.setBackground(new java.awt.Color(153, 153, 153));
        btnApplyRequest4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnApplyRequest4.setText("Apply Request");
        btnApplyRequest4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyRequest4ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RequestID", "CusID", "CusName", "TP", "Date", "RequestType", "RequestStatus", "EmpID"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout serviceRequestPanelLayout = new javax.swing.GroupLayout(serviceRequestPanel);
        serviceRequestPanel.setLayout(serviceRequestPanelLayout);
        serviceRequestPanelLayout.setHorizontalGroup(
            serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serviceRequestPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(serviceRequestPanelLayout.createSequentialGroup()
                        .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(l4emp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l4rs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l4rt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l4rdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l4cid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l4rid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rbtn_all_request, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(rbtn_pending_request, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbRequestID4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(serviceRequestPanelLayout.createSequentialGroup()
                                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtRequestdate4)
                                        .addComponent(txtRequestType4)
                                        .addComponent(cmbRequestStatus4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(txt_cusid4))
                            .addComponent(CmbEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(serviceRequestPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(rbtn_approved_request, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(serviceRequestPanelLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(btnApplyRequest4)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)))
        );
        serviceRequestPanelLayout.setVerticalGroup(
            serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serviceRequestPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtn_all_request)
                    .addComponent(rbtn_pending_request)
                    .addComponent(rbtn_approved_request))
                .addGap(18, 18, 18)
                .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l4rid)
                    .addComponent(cmbRequestID4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l4cid)
                    .addComponent(btnApplyRequest4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cusid4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(serviceRequestPanelLayout.createSequentialGroup()
                        .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l4rdate)
                            .addComponent(txtRequestdate4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l4rt)
                            .addComponent(txtRequestType4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l4rs)
                            .addComponent(cmbRequestStatus4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(serviceRequestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l4emp)
                    .addComponent(CmbEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("tab3", serviceRequestPanel);

        jLabel25.setText("Product ID");

        jLabel26.setText("Product Name");

        jLabel27.setText("Inventory ID");

        jLabel28.setText("Category ID");

        jLabel29.setText("Supplier ID");

        jLabel30.setText("Supplier Price");

        jLabel31.setText("Tax (%)");

        jLabel32.setText("Additional Charge");

        jLabel33.setText("Delivery Charge");

        jLabel34.setText("New Price");

        jLabel35.setText("Description");

        jLabel36.setText("Product Type");

        txtProductName6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductName6ActionPerformed(evt);
            }
        });

        cmbCategoryID6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoryID6ActionPerformed(evt);
            }
        });

        txtSupplierPrice6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSupplierPrice6ActionPerformed(evt);
            }
        });
        txtSupplierPrice6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSupplierPrice6KeyTyped(evt);
            }
        });

        txtTax6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTax6ActionPerformed(evt);
            }
        });
        txtTax6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTax6KeyTyped(evt);
            }
        });

        txtAdditionalCharge6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAdditionalCharge6KeyTyped(evt);
            }
        });

        txtDeliveryCharge6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDeliveryCharge6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDeliveryCharge6KeyTyped(evt);
            }
        });

        txtNewPrice6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNewPrice6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNewPrice6KeyTyped(evt);
            }
        });

        txtDescription6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescription6ActionPerformed(evt);
            }
        });

        btnADD6.setBackground(new java.awt.Color(153, 153, 153));
        btnADD6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnADD6.setText("ADD");
        btnADD6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADD6ActionPerformed(evt);
            }
        });

        jLabel1.setText("Specification");

        javax.swing.GroupLayout addProductPanelLayout = new javax.swing.GroupLayout(addProductPanel);
        addProductPanel.setLayout(addProductPanelLayout);
        addProductPanelLayout.setHorizontalGroup(
            addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProductPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addGap(74, 74, 74)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescription6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTax6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmbCategoryID6, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbSupplierID6, 0, 200, Short.MAX_VALUE)
                                .addComponent(txtSupplierPrice6)
                                .addComponent(txtDeliveryCharge6)
                                .addComponent(txtProductType6)
                                .addComponent(txtProductName6)
                                .addComponent(txt_addProductKey)
                                .addComponent(txt_inventoryAddKey)))
                        .addComponent(txtAdditionalCharge6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNewPrice6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSpecification6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 278, Short.MAX_VALUE)
                .addComponent(btnADD6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        addProductPanelLayout.setVerticalGroup(
            addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProductPanelLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_addProductKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProductName6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_inventoryAddKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCategoryID6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSupplierID6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSupplierPrice6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnADD6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTax6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAdditionalCharge6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeliveryCharge6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewPrice6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescription6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProductType6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSpecification6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab5", addProductPanel);

        gbtn_1.setText("Generate");
        gbtn_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gbtn_1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Retrieve the products along with their categories and current inventory quantities");

        jLabel3.setText("Retrieve the products that are out of stock (quantity is 0)");

        gbtn_2.setText("Generate");
        gbtn_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gbtn_2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Retrieve orders and include the customer's contact information");

        gbtn_3.setText("Generate");
        gbtn_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gbtn_3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReportLayout = new javax.swing.GroupLayout(Report);
        Report.setLayout(ReportLayout);
        ReportLayout.setHorizontalGroup(
            ReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(ReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59)
                .addGroup(ReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gbtn_1, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(gbtn_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gbtn_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(239, Short.MAX_VALUE))
        );
        ReportLayout.setVerticalGroup(
            ReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(ReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gbtn_1))
                .addGap(47, 47, 47)
                .addGroup(ReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gbtn_2))
                .addGap(57, 57, 57)
                .addGroup(ReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gbtn_3))
                .addContainerGap(413, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab6", Report);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, -29, 870, 750));

        jPanel5.setBackground(new java.awt.Color(107, 186, 120));

        TabInventory.setBackground(new java.awt.Color(153, 204, 255));
        TabInventory.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TabInventory.setText("Inventory");
        TabInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TabInventoryActionPerformed(evt);
            }
        });

        TabProductManager.setBackground(new java.awt.Color(153, 204, 255));
        TabProductManager.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TabProductManager.setText("Product Mangement");
        TabProductManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TabProductManagerActionPerformed(evt);
            }
        });

        TabServiceRequest.setBackground(new java.awt.Color(153, 204, 255));
        TabServiceRequest.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TabServiceRequest.setText("Sevice Requests");
        TabServiceRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TabServiceRequestActionPerformed(evt);
            }
        });

        TabSupplyManager.setBackground(new java.awt.Color(153, 204, 255));
        TabSupplyManager.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TabSupplyManager.setText("Supply Management");
        TabSupplyManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TabSupplyManagerActionPerformed(evt);
            }
        });

        TabOrders.setBackground(new java.awt.Color(153, 204, 255));
        TabOrders.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TabOrders.setText("Orders");
        TabOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TabOrdersActionPerformed(evt);
            }
        });

        TabRequest.setBackground(new java.awt.Color(153, 204, 255));
        TabRequest.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        TabRequest.setText("Reports");
        TabRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TabRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabProductManager, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
            .addComponent(TabInventory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(TabServiceRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(TabSupplyManager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(TabOrders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(TabRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(TabInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(TabProductManager, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(TabServiceRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(TabSupplyManager, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(TabOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(TabRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtn_pending_requestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_pending_requestActionPerformed
        // TODO add your handling code here:
        notdisplay(true);
           try{
               String q=("SELECT sr.RequestID, c.Cus_ID, c.fname, c.Telephone, sr.Request_Date, sr.Request_Type, sr.Request_status, sr.Emp_ID FROM servicerequest sr JOIN Customer c ON sr.Cus_ID = c.Cus_ID WHERE sr.Request_status = 'Open'");
              CserviceRequest c=new CserviceRequest();
         
        ResultSet rst=  c.servicerequest(q);
        DefaultTableModel obj=(DefaultTableModel)jTable3.getModel();
         obj.setRowCount(0);
          cmbRequestID4.removeAllItems();
          while (rst.next()) {
          String RequestID=String.valueOf(rst.getString("RequestID"));
               String CusID=String.valueOf(rst.getInt("Cus_ID"));
               String CusName=String.valueOf(rst.getString("fname"));
              String TP=String.valueOf(rst.getInt("Telephone"));
               String Date=String.valueOf(rst.getDate("Request_Date"));
                String RequestType=String.valueOf(rst.getString("Request_Type"));
                String RequestStatus=String.valueOf(rst.getString("Request_Status"));
                String EmpID=rst.getString("Emp_ID"); 
                
                String srtable[]={RequestID,CusID,CusName,TP,Date,RequestType,RequestStatus,EmpID};
               
                obj.addRow(srtable);
                cmbRequestID4.addItem(RequestID);
               
        } String y=("SELECT Emp_ID FROM employee");
                ResultSet rst2=  c.servicerequest(y);
                CmbEmpId.removeAllItems();
                while(rst2.next()){
                String EmpID=rst2.getString("Emp_ID"); 
                CmbEmpId.addItem(EmpID);
                }
           }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rbtn_pending_requestActionPerformed

    private void managePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managePriceActionPerformed
        // TODO add your handling code here:
        notdisplayManager(true);notdisplayManager2(true);btnUpdate.setVisible(false);
        txtManagePname.setEditable(false);
         txtAvailableQt3.setEditable(false);
              txtInventoryID3.setEditable(false);
              txtCategory3.setEditable(false);
              txtEachPrice3.setEditable(false);
              txtNewPrice3.setEditable(false);
          try{
               String q=("SELECT Product_ID FROM product");//get for pid
              CProductManagement  c1=new CProductManagement();
                ResultSet rst1=  c1.Management(q);
                cmbProductID3.removeAllItems();
                while(rst1.next()){
                String pid=rst1.getString("Product_ID"); 
                cmbProductID3.addItem(pid);
                }     
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_managePriceActionPerformed

    private void rbtn_allEmptyStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_allEmptyStockActionPerformed
        // TODO add your handling code here:
          notdisplayInventory(false);//hide lable
          try{
              String i=("SELECT i.Inventory_ID, i.Quantity, p.Name, c.Cat_Name FROM inventory i JOIN product p ON i.Product_ID = p.Product_ID JOIN category c ON p.Category_ID = c.Category_ID WHERE i.Quantity = 0");
              CInventory c=new CInventory();
        ResultSet rst=  c.inventory(i);
        DefaultTableModel obj=(DefaultTableModel)jTable1.getModel();
         obj.setRowCount(0);
        
          while (rst.next()) {
          String AvailableQt=String.valueOf(rst.getInt("Quantity"));
                String Category=String.valueOf(rst.getString("Cat_Name"));
                String InventoryID=String.valueOf(rst.getString("Inventory_ID"));
              String Name=String.valueOf(rst.getString("Name")); 
              String srtable[]={InventoryID,Name,Category,AvailableQt};
                obj.addRow(srtable);
        }}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_rbtn_allEmptyStockActionPerformed

    private void TabRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TabRequestActionPerformed
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(5);
    }//GEN-LAST:event_TabRequestActionPerformed

    private void TabOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TabOrdersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TabOrdersActionPerformed

    private void TabServiceRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TabServiceRequestActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
    }//GEN-LAST:event_TabServiceRequestActionPerformed

    private void txtProductName6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductName6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductName6ActionPerformed

    private void cmbProductName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductName2ActionPerformed
        // TODO add your handling code here:
        try{
            CInventory  c=new CInventory();
           String pm=(String)cmbProductName2.getSelectedItem();
                 String l=("SELECT i.Inventory_ID, i.Quantity, p.Name,c.Cat_Name FROM inventory i JOIN  product p ON i.Product_ID = p.Product_ID JOIN category c ON p.Category_ID = c.Category_ID WHERE p.Name = '"+pm+"'");
        ResultSet rst=  c.inventory(l);  
        cmbCategory2.removeAllItems();
          while (rst.next()) {
               String AvailableQt=String.valueOf(rst.getInt("Quantity"));
                String Category=String.valueOf(rst.getString("Cat_Name"));
                String InventoryID=String.valueOf(rst.getString("Inventory_ID"));
              txtAvailableQt2.setText(AvailableQt);
              txtInventoryID2.setText(InventoryID);
              cmbCategory2.addItem(Category);
              cmbCategory2.setSelectedItem(Category);
        }}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cmbProductName2ActionPerformed

    private void TabProductManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TabProductManagerActionPerformed
        jTabbedPane1.setSelectedIndex(1);displayAll.doClick();
    }//GEN-LAST:event_TabProductManagerActionPerformed

    private void TabSupplyManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TabSupplyManagerActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_TabSupplyManagerActionPerformed

    private void btnAddProduct3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProduct3ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
        txtNewPrice6.setEditable(false);
        //
        CProductAdd obj=new  CProductAdd();
        String pid=obj.CProductID();
        txt_addProductKey.setText(pid);
        txt_addProductKey.setEditable(false);
        //
        CProductAdd obj1=new  CProductAdd();
        String inventory=obj1.CinventoryID();
        txt_inventoryAddKey.setText(inventory);
        txt_inventoryAddKey.setEditable(false);
        //
         
        String q=("Select Category_ID from category");
        
        try{
        CProductAdd obj2=new CProductAdd();
        ResultSet rst=obj2.CaddIds(q);
       
        cmbCategoryID6.removeAllItems();
        
        while(rst.next()){
                String catname=String.valueOf(rst.getString("Category_ID"));
                cmbCategoryID6.addItem(catname);
                
        }rst.close();
        String w=(" Select SupplierID from supplier");
         ResultSet rst1=obj2.CaddIds(w);
         cmbSupplierID6.removeAllItems();
        while(rst1.next()){
                String sup=String.valueOf(rst1.getString("SupplierID"));
                cmbSupplierID6.addItem(sup);
               
        }rst1.close();
        } 
              catch (Exception e) {
               JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_btnAddProduct3ActionPerformed

    private void rbtn_all_requestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_all_requestActionPerformed
        // TODO add your handling code here:
        notdisplay(false);//label combo hide
          try{
        CserviceRequest c=new CserviceRequest();  
        ResultSet rst=  c.servicerequest();
        DefaultTableModel obj=(DefaultTableModel)jTable3.getModel();
         obj.setRowCount(0);
          while (rst.next()) {
          String RequestID=String.valueOf(rst.getString("RequestID"));
               String CusID=String.valueOf(rst.getInt("Cus_ID"));
               String CusName=String.valueOf(rst.getString("fname"));
              String TP=String.valueOf(rst.getInt("Telephone"));
               String Date=String.valueOf(rst.getDate("Request_Date"));
                String RequestType=String.valueOf(rst.getString("Request_Type"));
                String RequestStatus=String.valueOf(rst.getString("Request_Status"));
                String EmpID=rst.getString("Emp_ID"); 
                String srtable[]={RequestID,CusID,CusName,TP,Date,RequestType,RequestStatus,EmpID};           
                obj.addRow(srtable);
        }}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rbtn_all_requestActionPerformed

    private void rbtn_approved_requestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_approved_requestActionPerformed
        // TODO add your handling code here:
         notdisplay(false);//label combo hide
          try{
               String q=("SELECT sr.RequestID, c.Cus_ID, c.fname, c.Telephone, sr.Request_Date, sr.Request_Type, sr.Request_status, sr.Emp_ID FROM servicerequest sr JOIN Customer c ON sr.Cus_ID = c.Cus_ID WHERE sr.Request_status = 'Closed'");
              CserviceRequest c=new CserviceRequest();
         
        ResultSet rst=  c.servicerequest(q);
        DefaultTableModel obj=(DefaultTableModel)jTable3.getModel();
         obj.setRowCount(0);
          while (rst.next()) {
          String RequestID=String.valueOf(rst.getString("RequestID"));
               String CusID=String.valueOf(rst.getInt("Cus_ID"));
               String CusName=String.valueOf(rst.getString("fname"));
              String TP=String.valueOf(rst.getInt("Telephone"));
               String Date=String.valueOf(rst.getDate("Request_Date"));
                String RequestType=String.valueOf(rst.getString("Request_Type"));
                String RequestStatus=String.valueOf(rst.getString("Request_Status"));
                String EmpID=rst.getString("Emp_ID"); 
                
                String srtable[]={RequestID,CusID,CusName,TP,Date,RequestType,RequestStatus,EmpID};
               
                obj.addRow(srtable);
           
        
        }}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rbtn_approved_requestActionPerformed

    private void cmbRequestID4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRequestID4ActionPerformed
        // TODO add your handling code here:
       try{
             String item=(String)cmbRequestID4.getSelectedItem();
               String q=("SELECT sr.RequestID, c.Cus_ID, sr.Request_Date, sr.Request_Type FROM servicerequest sr JOIN Customer c ON sr.Cus_ID = c.Cus_ID WHERE sr.Request_status = 'Open' and sr.RequestID='"+item+"'");
              CserviceRequest c=new CserviceRequest();
              
        ResultSet rst=  c.servicerequest(q);  
          while (rst.next()) {
               String CusID=String.valueOf(rst.getInt("Cus_ID"));
               String Date=String.valueOf(rst.getDate("Request_Date"));
                String RequestType=String.valueOf(rst.getString("Request_Type"));
                txt_cusid4.setText(CusID);
                txtRequestType4.setText(RequestType);
                txtRequestdate4.setText(Date);
        }}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cmbRequestID4ActionPerformed

    private void btnApplyRequest4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyRequest4ActionPerformed
        // TODO add your handling code here:
        try{
        String rid=(String)cmbRequestID4.getSelectedItem();
        String EmpId=(String)CmbEmpId.getSelectedItem();
        String status=(String)cmbRequestStatus4.getSelectedItem();
        CserviceRequest c=new CserviceRequest();
        c.CUpdaateRequest(rid, EmpId, status);
       rbtn_pending_request.doClick();//refresh with reload
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnApplyRequest4ActionPerformed

    private void rbtn_searchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_searchProductActionPerformed
        // TODO add your handling code here:
        notdisplayInventory(true); jTable1.setVisible(false);
          try{
               String q=("SELECT Name FROM product");//get for productname
              CInventory  c1=new CInventory();
                ResultSet rst1=  c1.inventory(q);
                cmbProductName2.removeAllItems();
                while(rst1.next()){
                String pnme=rst1.getString("Name"); 
                cmbProductName2.addItem(pnme);
                }     
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rbtn_searchProductActionPerformed

    private void rbtn_AllStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_AllStockActionPerformed
        // TODO add your handling code here:
        notdisplayInventory(false);//hide lable
        jTable1.setVisible(true);
          try{
              CInventory c=new CInventory();
        ResultSet rst=  c.inventory();
        DefaultTableModel obj=(DefaultTableModel)jTable1.getModel();
         obj.setRowCount(0);
        
          while (rst.next()) {
          String AvailableQt=String.valueOf(rst.getInt("Quantity"));
                String Category=String.valueOf(rst.getString("Cat_Name"));
                String InventoryID=String.valueOf(rst.getString("Inventory_ID"));
              String Name=String.valueOf(rst.getString("Name")); 
              String srtable[]={InventoryID,Name,Category,AvailableQt};
                obj.addRow(srtable);
        }}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_rbtn_AllStockActionPerformed

    private void TabInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TabInventoryActionPerformed
        // TODO add your handling code here:
         jTabbedPane1.setSelectedIndex(0);
         rbtn_lowStock.doClick();
        
    }//GEN-LAST:event_TabInventoryActionPerformed

    private void rbtn_lowStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_lowStockActionPerformed
        // TODO add your handling code here:
         notdisplayInventory(false);//hide lable
         jTable1.setVisible(true);
          try{
              String i=("SELECT i.Inventory_ID, i.Quantity, p.Name, c.Cat_Name FROM inventory i JOIN product p ON i.Product_ID = p.Product_ID JOIN category c ON p.Category_ID = c.Category_ID WHERE i.Quantity <=5");
              CInventory c=new CInventory();
        ResultSet rst=  c.inventory(i);
        DefaultTableModel obj=(DefaultTableModel)jTable1.getModel();
         obj.setRowCount(0);
        
          while (rst.next()) {
          String AvailableQt=String.valueOf(rst.getInt("Quantity"));
                String Category=String.valueOf(rst.getString("Cat_Name"));
                String InventoryID=String.valueOf(rst.getString("Inventory_ID"));
              String Name=String.valueOf(rst.getString("Name")); 
              String srtable[]={InventoryID,Name,Category,AvailableQt};
                obj.addRow(srtable);
        }}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_rbtn_lowStockActionPerformed

    private void rbtn_CategorizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_CategorizeActionPerformed
        // TODO add your handling code here:
        notdisplayInventory(false);jTable1.setVisible(true);cmbCategory2.setVisible(true);lbl_I_category.setVisible(true);
        try{
              CInventory c=new CInventory();
                 String y=("SELECT Cat_name FROM category");
                ResultSet rst2=  c.inventory(y);
                cmbCategory2.removeAllItems();
                while(rst2.next()){
                String Cat_name=rst2.getString("Cat_name"); 
                cmbCategory2.addItem(Cat_name);}}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_rbtn_CategorizeActionPerformed

    private void cmbCategory2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategory2ActionPerformed
        // TODO add your handling code here:
        
          try{
                 
            String cname=(String)cmbCategory2.getSelectedItem();
              String i=("SELECT i.Inventory_ID, i.Quantity, p.Name, c.Cat_Name FROM inventory i JOIN product p ON i.Product_ID = p.Product_ID JOIN category c ON p.Category_ID = c.Category_ID WHERE c.Cat_Name = '"+cname+"'");
              CInventory c=new CInventory();
        ResultSet rst=  c.inventory(i);
        DefaultTableModel obj=(DefaultTableModel)jTable1.getModel();
         obj.setRowCount(0);
        
          while (rst.next()) {
          String AvailableQt=String.valueOf( rst.getInt("Quantity"));
                String Category=String.valueOf(rst.getString("Cat_Name"));
                String InventoryID=String.valueOf(rst.getString("Inventory_ID"));
              String Name=String.valueOf(rst.getString("Name")); 
              String srtable[]={InventoryID,Name,Category,AvailableQt};
                obj.addRow(srtable);}
               }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cmbCategory2ActionPerformed

    private void cmbProductID3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductID3ActionPerformed
        // TODO add your handling code here:
        String pid=(String)cmbProductID3.getSelectedItem();
        try{
        String q=("SELECT p.Product_ID, p.Name, p.price,c.Cat_Name, i.Inventory_ID,i.quantity FROM product p JOIN category c ON p.Category_ID = c.Category_ID JOIN inventory i ON p.Product_ID = i.Product_ID where p.Product_ID='"+pid+"' ");
        CProductManagement p = new CProductManagement();
          ResultSet rst=  p.Management(q);
          
          while (rst.next()) {
          String AvailableQt=String.valueOf( rst.getInt("Quantity"));
                String Category=String.valueOf(rst.getString("Cat_Name"));
                String InventoryID=String.valueOf(rst.getString("Inventory_ID"));
              String Name=String.valueOf(rst.getString("Name")); 
              String price=String.valueOf(rst.getFloat("price"));
              txtAvailableQt3.setText(AvailableQt);
              txtManagePname.setText(Name);
              txtEachPrice3.setText(price);
              txtInventoryID3.setText(InventoryID);
              txtCategory3.setText(Category);
               }}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_cmbProductID3ActionPerformed

    private void manageQytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageQytActionPerformed
        // TODO add your handling code here:
        notdisplayManager(false);notdisplayManager2(true);
         txtManagePname.setEditable(false);
         txtAvailableQt3.setEditable(true);
              txtInventoryID3.setEditable(false);
              txtCategory3.setEditable(false);
              txtEachPrice3.setEditable(false);
           try{
               String q=("SELECT Product_ID FROM product");//get for pid
              CProductManagement  c1=new CProductManagement();
                ResultSet rst1=  c1.Management(q);
                cmbProductID3.removeAllItems();
                while(rst1.next()){
                String pid=rst1.getString("Product_ID"); 
                cmbProductID3.addItem(pid);
                }     
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_manageQytActionPerformed

    private void displayAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAllActionPerformed
        // TODO add your handling code here:
        notdisplayManager(false);notdisplayManager2(false);
      
          try{
              String i=("SELECT p.Product_ID, p.Name, p.price,c.Cat_Name, i.Inventory_ID,i.quantity FROM product p JOIN category c ON p.Category_ID = c.Category_ID JOIN inventory i ON p.Product_ID = i.Product_ID; ");
              CProductManagement c=new CProductManagement();
        ResultSet rst=  c.Management(i);
        DefaultTableModel obj=(DefaultTableModel)jTable2.getModel();
         obj.setRowCount(0);
        
          while (rst.next()) {
          String ProductID=String.valueOf(rst.getString("Product_ID"));
                String ProductName=String.valueOf(rst.getString("Name"));
                String Category=String.valueOf(rst.getString("Cat_Name"));
              String Inventory=String.valueOf(rst.getString("Inventory_ID")); 
               String AvailableQyt=String.valueOf(rst.getInt("quantity")); 
               String price=String.valueOf(rst.getFloat("price")); 
              String srtable[]={ProductID,ProductName,Category,Inventory,AvailableQyt,price};
                obj.addRow(srtable);
        }}
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_displayAllActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String IId=txtInventoryID3.getText();
      int qyt = Integer.parseInt(txtAvailableQt3.getText());
      CProductManagement m =new CProductManagement();
      m.CUpdaateRequestQyt(IId, qyt);
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSet3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSet3ActionPerformed
        // TODO add your handling code here:
        try {
             String deliveryPrice = txtDeliveryCharge3.getText();
              float newprice = Float.parseFloat(txtDeliveryCharge3.getText());
              String pid=(String)cmbProductID3.getSelectedItem();
             if (deliveryPrice != null && !deliveryPrice.isEmpty())
             {
                  JOptionPane.showMessageDialog(this, "You are not enter delivery Feilds", "Error", JOptionPane.ERROR_MESSAGE);
             }
             else
             {
                 CProductManagement p =new CProductManagement();
                 p.CUpdaateRequest(pid,newprice);
             }
          
        } catch (NumberFormatException e) {
            // Handle invalid input (e.g., non-numeric input or negative values)
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSet3ActionPerformed

    private void txtNewPrice3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewPrice3ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txtNewPrice3ActionPerformed

    private void txtDeliveryCharge3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDeliveryCharge3KeyReleased
        // TODO add your handling code here:
          try {
            // Get input values from text fields
            float supplierPrice = Float.parseFloat(txtSupplierPrice3.getText());
            float taxPercentage = Float.parseFloat(txtTax3.getText());
            float additionalCharge = Float.parseFloat(txtAdditionalCharge3.getText());
            float deliveryPrice = Float.parseFloat(txtDeliveryCharge3.getText());

            // Validate input values
            if (supplierPrice < 0 || taxPercentage < 0 || additionalCharge < 0 || deliveryPrice < 0) {
                throw new NumberFormatException("Input values must be non-negative.");
            }

            // Calculate the new price
            float taxAmount = (taxPercentage / 100) * supplierPrice;
            float newPrice = supplierPrice + additionalCharge + deliveryPrice + taxAmount;

            // Display the new price in a JTextField
            txtNewPrice3.setText(String.format("%.2f", newPrice)); // Format to two decimal places
        } catch (NumberFormatException ex) {
           
        }
    }//GEN-LAST:event_txtDeliveryCharge3KeyReleased

    private void txtSupplierPrice3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupplierPrice3KeyTyped
        // TODO add your handling code here
        char c = evt.getKeyChar();
                if (!Character.isDigit(c)) {
                    evt.consume(); // Ignore non-numeric characters
                }
    }//GEN-LAST:event_txtSupplierPrice3KeyTyped

    private void txtTax3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTax3KeyTyped
        // TODO add your handling code here:
         // TODO add your handling code here
        char c = evt.getKeyChar();
                if (!Character.isDigit(c)) {
                    evt.consume(); // Ignore non-numeric characters
                }
    }//GEN-LAST:event_txtTax3KeyTyped

    private void txtAdditionalCharge3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdditionalCharge3KeyTyped
        // TODO add your handling code here:
         // TODO add your handling code here
        char c = evt.getKeyChar();
                if (!Character.isDigit(c)) {
                    evt.consume(); // Ignore non-numeric characters
                }
    }//GEN-LAST:event_txtAdditionalCharge3KeyTyped

    private void txtDeliveryCharge3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDeliveryCharge3KeyTyped
        // TODO add your handling code here:
         // TODO add your handling code here
        char c = evt.getKeyChar();
                if (!Character.isDigit(c)) {
                    evt.consume(); // Ignore non-numeric characters
                }
    }//GEN-LAST:event_txtDeliveryCharge3KeyTyped

    private void txtTax6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTax6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTax6ActionPerformed

    private void txtDescription6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescription6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescription6ActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void txtSupplierPrice6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSupplierPrice6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSupplierPrice6ActionPerformed

    private void txtSupplierPrice6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupplierPrice6KeyTyped
        // TODO add your handling code here:
          char c = evt.getKeyChar();
                if (!Character.isDigit(c)) {
                    evt.consume(); // Ignore non-numeric characters
                }
    }//GEN-LAST:event_txtSupplierPrice6KeyTyped

    private void txtAdditionalCharge6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdditionalCharge6KeyTyped
        // TODO add your handling code here:
          char c = evt.getKeyChar();
                if (!Character.isDigit(c)) {
                    evt.consume(); // Ignore non-numeric characters
                }
    }//GEN-LAST:event_txtAdditionalCharge6KeyTyped

    private void txtDeliveryCharge6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDeliveryCharge6KeyTyped
        // TODO add your handling code here:
          char c = evt.getKeyChar();
                if (!Character.isDigit(c)) {
                    evt.consume(); // Ignore non-numeric characters
                }
    }//GEN-LAST:event_txtDeliveryCharge6KeyTyped

    private void txtNewPrice6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewPrice6KeyTyped
        // TODO add your handling code here:
          char c = evt.getKeyChar();
                if (!Character.isDigit(c)) {
                    evt.consume(); // Ignore non-numeric characters
                }
    }//GEN-LAST:event_txtNewPrice6KeyTyped

    private void txtNewPrice6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewPrice6KeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtNewPrice6KeyReleased

    private void txtDeliveryCharge6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDeliveryCharge6KeyReleased
        // TODO add your handling code here:
         try {
            // Get input values from text fields
            float supplierPrice = Float.parseFloat(txtSupplierPrice6.getText());
            float taxPercentage = Float.parseFloat(txtTax6.getText());
            float additionalCharge = Float.parseFloat(txtAdditionalCharge6.getText());
            float deliveryPrice = Float.parseFloat(txtDeliveryCharge6.getText());

            // Validate input values
            if (supplierPrice < 0 || taxPercentage < 0 || additionalCharge < 0 || deliveryPrice < 0) {
                throw new NumberFormatException("Input values must be non-negative.");
            }

            // Calculate the new price
            float taxAmount = (taxPercentage / 100) * supplierPrice;
            float newPrice = supplierPrice + additionalCharge + deliveryPrice + taxAmount;

            // Display the new price in a JTextField
            txtNewPrice6.setText(String.format("%.2f", newPrice)); // Format to two decimal places
        } catch (NumberFormatException ex) {
           
        }
    }//GEN-LAST:event_txtDeliveryCharge6KeyReleased

    private void txtTax6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTax6KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
                if (!Character.isDigit(c)) {
                    evt.consume(); // Ignore non-numeric characters
                }
    }//GEN-LAST:event_txtTax6KeyTyped

    private void btnADD6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADD6ActionPerformed
        // TODO add your handling code here:
   String productName = txtProductName6.getText();
String pid = (String) txt_addProductKey.getText();
String iid = (String) txt_inventoryAddKey.getText();
String priceText = txtNewPrice6.getText();
String catogory = (String)cmbCategoryID6.getSelectedItem();
String supplier = (String)cmbSupplierID6.getSelectedItem();
String specification = txtSpecification6.getText();
String Descrip=txtDescription6.getText();
String ptype=txtProductType6.getText();

// Check for null or empty values
if (productName.isEmpty() || pid.isEmpty() || iid.isEmpty() || priceText.isEmpty() || catogory == null ||
    supplier == null || specification.isEmpty() || Descrip.isEmpty() || ptype.isEmpty()) {
    // Display a message to the user to enter all values
    JOptionPane.showMessageDialog(null, "Please enter all required values.", "Missing Values", JOptionPane.WARNING_MESSAGE);
} else {
    try {
        float price = Float.parseFloat(priceText);
        // All values are not null, proceed with adding the product
        CProductAdd m = new CProductAdd();
        m.addProduct(pid, productName, iid, catogory, supplier, price, Descrip, ptype, specification);
    } catch (NumberFormatException e) {
        // Handle the exception if parsing 'price' fails (e.g., if it's not a valid float)
        JOptionPane.showMessageDialog(null, "Invalid price format. Please enter a valid price.", "Invalid Price", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        // Handle any other exceptions that might occur
        JOptionPane.showMessageDialog(null, "An error occurred. Please check your input.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    }//GEN-LAST:event_btnADD6ActionPerformed

    private void cmbCategoryID6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoryID6ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_cmbCategoryID6ActionPerformed

    private void gbtn_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gbtn_1ActionPerformed
        // TODO add your handling code here:
           try{
        JasperDesign jasperdesign=JRXmlLoader.load("C:\\Users\\dell\\Desktop\\H20proTest01\\src\\Report\\MainReport.jrxml");
         JRDesignQuery designquery=new JRDesignQuery();
         designquery.setText("SELECT p.Product_ID, p.Name AS ProductName, c.Cat_Name AS Category, i.Quantity AS InventoryQuantity\n" +
"FROM product p\n" +
"INNER JOIN inventory i ON p.Product_ID = i.Product_ID\n" +
"INNER JOIN category c ON p.Category_ID = c.Category_ID;");
         jasperdesign.setQuery(designquery);
         JasperReport report=JasperCompileManager.compileReport(jasperdesign);
         JasperPrint print =JasperFillManager.fillReport(report,null,MyDBConnection.createDBConnection());
            JasperViewer.viewReport(print);
            
         
        }
        catch(Exception e)
        {
            System.out.println("Error"+e);
        }
    }//GEN-LAST:event_gbtn_1ActionPerformed

    private void gbtn_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gbtn_2ActionPerformed
        // TODO add your handling code here:
         try{
        JasperDesign jasperdesign=JRXmlLoader.load("C:\\Users\\dell\\Desktop\\H20proTest01\\src\\Report\\outOfStockReport.jrxml");
         JRDesignQuery designquery=new JRDesignQuery();
         designquery.setText("SELECT p.Product_ID, p.Name AS ProductName, c.Cat_Name AS CategoryName\n" +
"FROM product p\n" +
"INNER JOIN category c ON p.Category_ID = c.Category_ID\n" +
"WHERE p.Product_ID NOT IN (SELECT Product_ID FROM inventory WHERE Quantity > 0);");
         jasperdesign.setQuery(designquery);
         JasperReport report=JasperCompileManager.compileReport(jasperdesign);
         JasperPrint print =JasperFillManager.fillReport(report,null,MyDBConnection.createDBConnection());
            JasperViewer.viewReport(print);
            
         
        }
        catch(Exception e)
        {
            System.out.println("Error"+e);
        }
    }//GEN-LAST:event_gbtn_2ActionPerformed

    private void gbtn_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gbtn_3ActionPerformed
        // TODO add your handling code here:
        try{
        JasperDesign jasperdesign=JRXmlLoader.load("C:\\Users\\dell\\Desktop\\H20proTest01\\src\\Report\\OrderReport.jrxml");
         JRDesignQuery designquery=new JRDesignQuery();
         designquery.setText("SELECT o.Order_ID, o.Cus_ID, c.fname AS Customer_FirstName, c.lname AS Customer_LastName, c.Address AS Customer_Address, c.Telephone AS Customer_Telephone, c.Email AS Customer_Email, o.Order_Date, o.Order_Status\n" +
"FROM `order` o\n" +
"INNER JOIN customer c ON o.Cus_ID = c.Cus_ID;");
         jasperdesign.setQuery(designquery);
         JasperReport report=JasperCompileManager.compileReport(jasperdesign);
         JasperPrint print =JasperFillManager.fillReport(report,null,MyDBConnection.createDBConnection());
            JasperViewer.viewReport(print);
            
         
        }
        catch(Exception e)
        {
            System.out.println("Error"+e);
        }
    }//GEN-LAST:event_gbtn_3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmbEmpId;
    private javax.swing.JPanel InventoryPanel;
    private javax.swing.JPanel ManageProductPanel;
    private javax.swing.JPanel Report;
    private javax.swing.JPanel SupplierPanel;
    private javax.swing.JButton TabInventory;
    private javax.swing.JButton TabOrders;
    private javax.swing.JButton TabProductManager;
    private javax.swing.JButton TabRequest;
    private javax.swing.JButton TabServiceRequest;
    private javax.swing.JButton TabSupplyManager;
    private javax.swing.JPanel addProductPanel;
    private javax.swing.JButton btnADD6;
    private javax.swing.JButton btnAddProduct3;
    private javax.swing.JButton btnApplyRequest4;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnSet3;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JComboBox<String> cmbCategory2;
    private javax.swing.JComboBox<String> cmbCategoryID6;
    private javax.swing.JComboBox<String> cmbProductID3;
    private javax.swing.JComboBox<String> cmbProductName2;
    private javax.swing.JComboBox<String> cmbRequestID4;
    private javax.swing.JComboBox<String> cmbRequestStatus4;
    private javax.swing.JComboBox<String> cmbSupplierID1;
    private javax.swing.JComboBox<String> cmbSupplierID6;
    private javax.swing.JRadioButton displayAll;
    private javax.swing.JButton gbtn_1;
    private javax.swing.JButton gbtn_2;
    private javax.swing.JButton gbtn_3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton11;
    private javax.swing.JRadioButton jRadioButton12;
    private javax.swing.JRadioButton jRadioButton13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JLabel l4cid;
    private javax.swing.JLabel l4emp;
    private javax.swing.JLabel l4rdate;
    private javax.swing.JLabel l4rid;
    private javax.swing.JLabel l4rs;
    private javax.swing.JLabel l4rt;
    private javax.swing.JLabel lbl_I_Pname;
    private javax.swing.JLabel lbl_I_availableQyt;
    private javax.swing.JLabel lbl_I_category;
    private javax.swing.JLabel lbl_I_inventoryId;
    private javax.swing.JLabel lbl_M_DCharge;
    private javax.swing.JLabel lbl_M_Iid;
    private javax.swing.JLabel lbl_M_Pid;
    private javax.swing.JLabel lbl_M_Pname;
    private javax.swing.JLabel lbl_M_adCharge;
    private javax.swing.JLabel lbl_M_catName;
    private javax.swing.JLabel lbl_M_newPrice;
    private javax.swing.JLabel lbl_M_price;
    private javax.swing.JLabel lbl_M_qyt;
    private javax.swing.JLabel lbl_M_supplierprice;
    private javax.swing.JLabel lbl_M_tax;
    private javax.swing.JRadioButton managePrice;
    private javax.swing.JRadioButton manageQyt;
    private javax.swing.JRadioButton rbtn_AllStock;
    private javax.swing.JRadioButton rbtn_Categorize;
    private javax.swing.JRadioButton rbtn_allEmptyStock;
    private javax.swing.JRadioButton rbtn_all_request;
    private javax.swing.JRadioButton rbtn_approved_request;
    private javax.swing.JRadioButton rbtn_lowStock;
    private javax.swing.JRadioButton rbtn_pending_request;
    private javax.swing.JRadioButton rbtn_searchProduct;
    private javax.swing.ButtonGroup rbtng_inventory;
    private javax.swing.ButtonGroup rbtng_product_manager;
    private javax.swing.ButtonGroup rbtng_request;
    private javax.swing.JPanel serviceRequestPanel;
    private javax.swing.JTextField txtAdditionalCharge3;
    private javax.swing.JTextField txtAdditionalCharge6;
    private javax.swing.JTextField txtAvailableQt2;
    private javax.swing.JTextField txtAvailableQt3;
    private javax.swing.JTextField txtCategory3;
    private javax.swing.JTextField txtContractInfo1;
    private javax.swing.JTextField txtDeliveryCharge3;
    private javax.swing.JTextField txtDeliveryCharge6;
    private javax.swing.JTextField txtDescription6;
    private javax.swing.JTextField txtEachPrice3;
    private javax.swing.JTextField txtInventoryID2;
    private javax.swing.JTextField txtInventoryID3;
    private javax.swing.JTextField txtManagePname;
    private javax.swing.JTextField txtNewPrice3;
    private javax.swing.JTextField txtNewPrice6;
    private javax.swing.JTextField txtProductName6;
    private javax.swing.JTextField txtProductType6;
    private javax.swing.JTextField txtRequestType4;
    private javax.swing.JTextField txtRequestdate4;
    private javax.swing.JTextField txtSpecification6;
    private javax.swing.JTextField txtSupplierName1;
    private javax.swing.JTextField txtSupplierPrice3;
    private javax.swing.JTextField txtSupplierPrice6;
    private javax.swing.JTextField txtTax3;
    private javax.swing.JTextField txtTax6;
    private javax.swing.JTextField txt_addProductKey;
    private javax.swing.JTextField txt_cusid4;
    private javax.swing.JTextField txt_inventoryAddKey;
    // End of variables declaration//GEN-END:variables
}
